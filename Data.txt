import React from "react";

const RenderJson = ({ data }) => {
  // Check if value is an object (but not null/array)
  const isObject = (val) => val && typeof val === "object" && !Array.isArray(val);

  if (isObject(data)) {
    return (
      <ul style={{ listStyle: "none", paddingLeft: 16 }}>
        {Object.entries(data).map(([key, value]) => (
          <li key={key}>
            <strong>{key}:</strong>{" "}
            {isObject(value) || Array.isArray(value) ? (
              <RenderJson data={value} />
            ) : (
              String(value)
            )}
          </li>
        ))}
      </ul>
    );
  }

  if (Array.isArray(data)) {
    return (
      <ul style={{ listStyle: "circle", paddingLeft: 16 }}>
        {data.map((item, index) => (
          <li key={index}>
            {isObject(item) || Array.isArray(item) ? (
              <RenderJson data={item} />
            ) : (
              String(item)
            )}
          </li>
        ))}
      </ul>
    );
  }

  // Fallback for primitives
  return <span>{String(data)}</span>;
};

export default RenderJson;
